# please don't use German umlauts
# database type will referenced from last parameter in dbtypes.cfg
# [<database type>|<command>|<comment>]
# Kommando A = Execute, E = Edit
# sql code
[1|A|List of tables/views in current schema]
select table_name from user_tables
[1|A|List of all tables and there columns of the current schema]
select table_name,column_name,data_type,column_id,data_length,data_precision,nullable from user_tab_columns
[1|A|List of sequences in current schema]
select * from user_sequences
[1|A|List of constraints in current schema ]
select * from user_constraints
[1|A|List of all indexes in current schema]
select INDEX_NAME,TABLE_NAME,UNIQUENESS,INCLUDE_COLUMN,STATUS,GENERATED from user_indexes
[1|A|List of all columns of indexes in current schema]
select * from user_ind_columns
[1|A|List of all tables and there columns in all schemas except SYS and SYSTEM]
select owner,table_name,column_name,data_type,column_id,data_length,data_precision,nullable from all_tab_columns where owner not like 'SYS%'
[1|A|PL/SQL compile errors]
select * from user_errors
[1|A|Compile invalid objects]
select 'alter '||OBJECT_TYPE||' '||OBJECT_NAME||' compile;' from user_objects where status='INVALID'
[1|A|PL/SQL source code]
select * from user_source
[1|A|Create explain plan]
explain plan for
[1|A|Show last explain plan]
select * from table(dbms_xplan.display())
[1|A|View definitions]
select * from user_views
[1|E|PL/SQL source for ...]
select * from user_source where upper(NAME) like upper('%{Name}%')
[1|A|change database to restricted session modus]
alter system enable restricted session
[1|A|change database from restricted session modus to normal modus]
alter system disable restricted session
[1|A|execute log file switch]
alter system switch logfile
[1|E|Smoth cancelation of user session]
alter system disconnect session '{SID},{SERIAL#}' post_transaction
[1|E|kill user session immediatly]
alter system kill session '{SID},{SERIAL#}'
[1|E|lock a user account]
alter user {username} account lock
[1|E|unlock a user account]
alter user {username} account unlock
[1|E|change password for user]
alter user {username} identified by {passwort}
[1|E|set default tablespace for user]
alter user {username} default tablespace {tablespacename}
[1|E|activate logging for a tablespace]
alter tablespace {tablespacename} logging
[1|E|deactivate logging for a tablespace]
alter tablespace {tablespacename} nologging
[1|E|activate auto extention of a datenfile]
alter database datafile {filename} autoextend on
[1|E|change size of a datafile]
alter database datafile {filename} resize {Groesse in MB} M
[1|E|rename a datafile] 
alter database rename file {alter_filename} to {neuer_filename}
[1|E|add a redo log group] 
alter database add logfile group {Nummer} ({diska:log3.log} , {diskb:log3.log}) SIZE {Groesse in KB}K
[1|E|add new user] 
create user {username} identified by {password}
[1|E|grant privileg or role to an user]
grant {Privileg oder Rolle} to {username}
[2|A|List of all tables in current schema]
show tables
[3|A|List all tables of current schema]
select * from informix.systables where tabid>99
[3|A|List all system tables of current schema]
select * from informix.systables where tabid<100
[3|A|List all columns for all tables of current schema]
select * from informix.syscolumns where tabid>99
[3|A|List all indexes for all tables in current schema]
select * from informix.sysindexes where tabid>99
[3|A|List all constraints in current schema]
select * from informix.sysconstraints where tabid>99
[3|A|List all users in current database]
select * from informix.sysusers
[0|E|add a column to table]
alter table {tablename} add {columnname} {datatype}
[0|E|remove a column from table]
alter table {tablename} drop column {columnname}
[7|A|Show sessions]
select * from pg_stat_activity
[7|A|Show configuration parameters]
show all
[7|A|Show locks]
SELECT   blocked_locks.pid     AS blocked_pid,
         blocked_activity.application_name  AS blocked_application,
         blocked_activity.usename  AS blocked_user,
         blocking_locks.pid     AS blocking_pid,
         blocking_activity.application_name AS blocking_application,
         blocking_activity.usename AS blocking_user,
         blocked_activity.query    AS blocked_statement,
         blocking_activity.query   AS current_statement_in_blocking_process
   FROM  pg_catalog.pg_locks         blocked_locks
    JOIN pg_catalog.pg_stat_activity blocked_activity  ON blocked_activity.pid = blocked_locks.pid
    JOIN pg_catalog.pg_locks         blocking_locks 
        ON blocking_locks.locktype = blocked_locks.locktype
        AND blocking_locks.DATABASE IS NOT DISTINCT FROM blocked_locks.DATABASE
        AND blocking_locks.relation IS NOT DISTINCT FROM blocked_locks.relation
        AND blocking_locks.page IS NOT DISTINCT FROM blocked_locks.page
        AND blocking_locks.tuple IS NOT DISTINCT FROM blocked_locks.tuple
        AND blocking_locks.virtualxid IS NOT DISTINCT FROM blocked_locks.virtualxid
        AND blocking_locks.transactionid IS NOT DISTINCT FROM blocked_locks.transactionid
        AND blocking_locks.classid IS NOT DISTINCT FROM blocked_locks.classid
        AND blocking_locks.objid IS NOT DISTINCT FROM blocked_locks.objid
        AND blocking_locks.objsubid IS NOT DISTINCT FROM blocked_locks.objsubid
        AND blocking_locks.pid != blocked_locks.pid
    JOIN pg_catalog.pg_stat_activity blocking_activity ON blocking_activity.pid = blocking_locks.pid
   WHERE NOT blocked_locks.GRANTED
